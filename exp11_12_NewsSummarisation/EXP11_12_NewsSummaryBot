{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEa0X6aA5vzRWNNdq8IkHQ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 패키지 설치 및 임포트"],"metadata":{"id":"UhQ4uJms2fm3"}},{"cell_type":"code","source":["!pip install summa"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rXx8mgcN2Drr","executionInfo":{"status":"ok","timestamp":1696727674682,"user_tz":-540,"elapsed":5041,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"88ce8a2a-a548-4f4e-a9f8-1203e68a08ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting summa\n","  Downloading summa-1.2.0.tar.gz (54 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/54.9 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.9/54.9 kB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: scipy>=0.19 in /usr/local/lib/python3.10/dist-packages (from summa) (1.11.3)\n","Requirement already satisfied: numpy<1.28.0,>=1.21.6 in /usr/local/lib/python3.10/dist-packages (from scipy>=0.19->summa) (1.23.5)\n","Building wheels for collected packages: summa\n","  Building wheel for summa (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for summa: filename=summa-1.2.0-py3-none-any.whl size=54389 sha256=b76744ecedc17311373a8bd29d33843f8dcb1b5e7ca50e51e2673d6af40ee458\n","  Stored in directory: /root/.cache/pip/wheels/4a/ca/c5/4958614cfba88ed6ceb7cb5a849f9f89f9ac49971616bc919f\n","Successfully built summa\n","Installing collected packages: summa\n","Successfully installed summa-1.2.0\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vArN6VQl1558"},"outputs":[],"source":["from importlib.metadata import version\n","import nltk\n","import tensorflow\n","import summa"]},{"cell_type":"markdown","source":["## 데이터 불러오기"],"metadata":{"id":"rYs6nOYx2nJX"}},{"cell_type":"code","source":["import pandas as pd\n","import urllib.request\n","urllib.request.urlretrieve(\"https://raw.githubusercontent.com/sunnysai12345/News_Summary/master/news_summary_more.csv\", filename=\"news_summary_more.csv\")\n","data = pd.read_csv('news_summary_more.csv', encoding='iso-8859-1')\n","data.sample(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"Y_JXcJ4b2c5w","executionInfo":{"status":"ok","timestamp":1696743118334,"user_tz":-540,"elapsed":3706,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"2a11b494-a018-4750-c9e8-c59f56ec50ee"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               headlines  \\\n","6126   'Zero' makers alter scenes to replace dagger o...   \n","20733  Capital Float acquires personal finance app Wa...   \n","78938  In Pics: School by B'luru couple for construct...   \n","77155  Will personally check how many potholes remain...   \n","5847   Sajjan Kumar to move SC against HC order in 19...   \n","59646  Chinese officials asked to study book on Prez ...   \n","6557   God said netas will rule every corner, then ma...   \n","46330  Australian cricketer suffers wardrobe fail whi...   \n","38564  Grand Alliance sentiment in people, not just p...   \n","22165  ShopClues to break-even soon, raised $16 milli...   \n","\n","                                                    text  \n","6126   The makers of 'Zero' have altered scenes that ...  \n","20733  Bengaluru-based lending company Capital Float ...  \n","78938  A Bengaluru couple has reportedly started 'Diy...  \n","77155  Pulling up the BMC over potholes on Mumbai roa...  \n","5847   Congress leader Sajjan Kumar will move an appe...  \n","59646  Millions of officials across China have been t...  \n","6557   Chairman of RPG Group Harsh Goenka on Tuesday ...  \n","46330  Australian cricketer Cameron Bancroft suffered...  \n","38564  Addressing the media in Mumbai, Congress Presi...  \n","22165  ShopClues CEO Sanjay Sethi claimed in an e-mai...  "],"text/html":["\n","  <div id=\"df-9e1fe187-f949-43c7-ac38-2b396f60c0c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>headlines</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6126</th>\n","      <td>'Zero' makers alter scenes to replace dagger o...</td>\n","      <td>The makers of 'Zero' have altered scenes that ...</td>\n","    </tr>\n","    <tr>\n","      <th>20733</th>\n","      <td>Capital Float acquires personal finance app Wa...</td>\n","      <td>Bengaluru-based lending company Capital Float ...</td>\n","    </tr>\n","    <tr>\n","      <th>78938</th>\n","      <td>In Pics: School by B'luru couple for construct...</td>\n","      <td>A Bengaluru couple has reportedly started 'Diy...</td>\n","    </tr>\n","    <tr>\n","      <th>77155</th>\n","      <td>Will personally check how many potholes remain...</td>\n","      <td>Pulling up the BMC over potholes on Mumbai roa...</td>\n","    </tr>\n","    <tr>\n","      <th>5847</th>\n","      <td>Sajjan Kumar to move SC against HC order in 19...</td>\n","      <td>Congress leader Sajjan Kumar will move an appe...</td>\n","    </tr>\n","    <tr>\n","      <th>59646</th>\n","      <td>Chinese officials asked to study book on Prez ...</td>\n","      <td>Millions of officials across China have been t...</td>\n","    </tr>\n","    <tr>\n","      <th>6557</th>\n","      <td>God said netas will rule every corner, then ma...</td>\n","      <td>Chairman of RPG Group Harsh Goenka on Tuesday ...</td>\n","    </tr>\n","    <tr>\n","      <th>46330</th>\n","      <td>Australian cricketer suffers wardrobe fail whi...</td>\n","      <td>Australian cricketer Cameron Bancroft suffered...</td>\n","    </tr>\n","    <tr>\n","      <th>38564</th>\n","      <td>Grand Alliance sentiment in people, not just p...</td>\n","      <td>Addressing the media in Mumbai, Congress Presi...</td>\n","    </tr>\n","    <tr>\n","      <th>22165</th>\n","      <td>ShopClues to break-even soon, raised $16 milli...</td>\n","      <td>ShopClues CEO Sanjay Sethi claimed in an e-mai...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e1fe187-f949-43c7-ac38-2b396f60c0c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e1fe187-f949-43c7-ac38-2b396f60c0c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e1fe187-f949-43c7-ac38-2b396f60c0c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-151dbef6-12d6-4e61-a29b-03b13390bd38\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-151dbef6-12d6-4e61-a29b-03b13390bd38')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-151dbef6-12d6-4e61-a29b-03b13390bd38 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["# 데이터 전처리"],"metadata":{"id":"ltBDiXSx23ax"}},{"cell_type":"code","source":["# 중복 확인\n","\n","print('전체 샘플의 수 :', data.shape)\n","print('headlines 열에서 중복을 배제한 유일한 샘플의 수 :', data['headlines'].nunique())\n","print('text 열에서 중복을 배제한 유일한 샘플의 수 :', data['text'].nunique())"],"metadata":{"id":"U0iN0Dcx22Bh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696729822023,"user_tz":-540,"elapsed":303,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"94dab442-1bd5-40ce-88b7-a57621561509"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["전체 샘플의 수 : (98401, 2)\n","headlines 열에서 중복을 배제한 유일한 샘플의 수 : 98280\n","text 열에서 중복을 배제한 유일한 샘플의 수 : 98360\n"]}]},{"cell_type":"code","source":["# 중복 제거('text' 컬럼 기준)\n","data.drop_duplicates(subset = ['text'], inplace=True)\n","print('전체 샘플수 :', (len(data)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AE7Bm8fM-xdv","executionInfo":{"status":"ok","timestamp":1696729893401,"user_tz":-540,"elapsed":296,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"f6e10909-bafb-4aa7-8631-91b141101bed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["전체 샘플수 : 98360\n"]}]},{"cell_type":"code","source":["# 빈칸이 있나\n","print(data.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WbgDvV9j-7d7","executionInfo":{"status":"ok","timestamp":1696729917214,"user_tz":-540,"elapsed":2,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"1cb33f7d-00c1-4005-a58f-701eebdf0f10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["headlines    0\n","text         0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# 텍스트 정규화를 위한 사전\n","\n","contractions = {\"ain't\": \"is not\", \"aren't\": \"are not\",\"can't\": \"cannot\", \"'cause\": \"because\", \"could've\": \"could have\", \"couldn't\": \"could not\",\n","                           \"didn't\": \"did not\",  \"doesn't\": \"does not\", \"don't\": \"do not\", \"hadn't\": \"had not\", \"hasn't\": \"has not\", \"haven't\": \"have not\",\n","                           \"he'd\": \"he would\",\"he'll\": \"he will\", \"he's\": \"he is\", \"how'd\": \"how did\", \"how'd'y\": \"how do you\", \"how'll\": \"how will\", \"how's\": \"how is\",\n","                           \"I'd\": \"I would\", \"I'd've\": \"I would have\", \"I'll\": \"I will\", \"I'll've\": \"I will have\",\"I'm\": \"I am\", \"I've\": \"I have\", \"i'd\": \"i would\",\n","                           \"i'd've\": \"i would have\", \"i'll\": \"i will\",  \"i'll've\": \"i will have\",\"i'm\": \"i am\", \"i've\": \"i have\", \"isn't\": \"is not\", \"it'd\": \"it would\",\n","                           \"it'd've\": \"it would have\", \"it'll\": \"it will\", \"it'll've\": \"it will have\",\"it's\": \"it is\", \"let's\": \"let us\", \"ma'am\": \"madam\",\n","                           \"mayn't\": \"may not\", \"might've\": \"might have\",\"mightn't\": \"might not\",\"mightn't've\": \"might not have\", \"must've\": \"must have\",\n","                           \"mustn't\": \"must not\", \"mustn't've\": \"must not have\", \"needn't\": \"need not\", \"needn't've\": \"need not have\",\"o'clock\": \"of the clock\",\n","                           \"oughtn't\": \"ought not\", \"oughtn't've\": \"ought not have\", \"shan't\": \"shall not\", \"sha'n't\": \"shall not\", \"shan't've\": \"shall not have\",\n","                           \"she'd\": \"she would\", \"she'd've\": \"she would have\", \"she'll\": \"she will\", \"she'll've\": \"she will have\", \"she's\": \"she is\",\n","                           \"should've\": \"should have\", \"shouldn't\": \"should not\", \"shouldn't've\": \"should not have\", \"so've\": \"so have\",\"so's\": \"so as\",\n","                           \"this's\": \"this is\",\"that'd\": \"that would\", \"that'd've\": \"that would have\", \"that's\": \"that is\", \"there'd\": \"there would\",\n","                           \"there'd've\": \"there would have\", \"there's\": \"there is\", \"here's\": \"here is\",\"they'd\": \"they would\", \"they'd've\": \"they would have\",\n","                           \"they'll\": \"they will\", \"they'll've\": \"they will have\", \"they're\": \"they are\", \"they've\": \"they have\", \"to've\": \"to have\",\n","                           \"wasn't\": \"was not\", \"we'd\": \"we would\", \"we'd've\": \"we would have\", \"we'll\": \"we will\", \"we'll've\": \"we will have\", \"we're\": \"we are\",\n","                           \"we've\": \"we have\", \"weren't\": \"were not\", \"what'll\": \"what will\", \"what'll've\": \"what will have\", \"what're\": \"what are\",\n","                           \"what's\": \"what is\", \"what've\": \"what have\", \"when's\": \"when is\", \"when've\": \"when have\", \"where'd\": \"where did\", \"where's\": \"where is\",\n","                           \"where've\": \"where have\", \"who'll\": \"who will\", \"who'll've\": \"who will have\", \"who's\": \"who is\", \"who've\": \"who have\",\n","                           \"why's\": \"why is\", \"why've\": \"why have\", \"will've\": \"will have\", \"won't\": \"will not\", \"won't've\": \"will not have\",\n","                           \"would've\": \"would have\", \"wouldn't\": \"would not\", \"wouldn't've\": \"would not have\", \"y'all\": \"you all\",\n","                           \"y'all'd\": \"you all would\",\"y'all'd've\": \"you all would have\",\"y'all're\": \"you all are\",\"y'all've\": \"you all have\",\n","                           \"you'd\": \"you would\", \"you'd've\": \"you would have\", \"you'll\": \"you will\", \"you'll've\": \"you will have\",\n","                           \"you're\": \"you are\", \"you've\": \"you have\"}\n","\n","print(\"정규화 사전의 수: \", len(contractions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1_x8kcPC-_3P","executionInfo":{"status":"ok","timestamp":1696743187421,"user_tz":-540,"elapsed":532,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"d6837148-bf76-46c3-e4eb-4d65d270b1b8"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["정규화 사전의 수:  120\n"]}]},{"cell_type":"code","source":["# 불용어 패키지 다운로드\n","# ! pip install nltk\n","# import nltk\n","nltk.download('stopwords')\n","# ! pip install bs4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vF8Ahj2wBHUI","executionInfo":{"status":"ok","timestamp":1696743007243,"user_tz":-540,"elapsed":990,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"2b1e487c-53ee-4555-cdeb-1ff7fcc86909"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# 데이터 전처리 함수\n","def preprocess_sentence(sentence, remove_stopwords=True):\n","    sentence = sentence.lower() # 텍스트 소문자화\n","    sentence = BeautifulSoup(sentence, \"lxml\").text # <br />, <a href = ...> 등의 html 태그 제거\n","    sentence = re.sub(r'\\([^)]*\\)', '', sentence) # 괄호로 닫힌 문자열 (...) 제거 Ex) my husband (and myself!) for => my husband for\n","    sentence = re.sub('\"','', sentence) # 쌍따옴표 \" 제거\n","    sentence = ' '.join([contractions[t] if t in contractions else t for t in sentence.split(\" \")]) # 약어 정규화\n","    sentence = re.sub(r\"'s\\b\",\"\", sentence) # 소유격 제거. Ex) roland's -> roland\n","    sentence = re.sub(\"[^a-zA-Z]\", \" \", sentence) # 영어 외 문자(숫자, 특수문자 등) 공백으로 변환\n","    sentence = re.sub('[m]{2,}', 'mm', sentence) # m이 3개 이상이면 2개로 변경. Ex) ummmmmmm yeah -> umm yeah\n","\n","    # 불용어 제거 (Text)\n","    if remove_stopwords:\n","        tokens = ' '.join(word for word in sentence.split() if not word in stopwords.words('english') if len(word) > 1)\n","    # 불용어 미제거 (Summary)\n","    else:\n","        tokens = ' '.join(word for word in sentence.split() if len(word) > 1)\n","    return tokens"],"metadata":{"id":"NxrxUHCt_M-g","executionInfo":{"status":"ok","timestamp":1696743042926,"user_tz":-540,"elapsed":496,"user":{"displayName":"­김정현","userId":"07015025296255556159"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["# 전체 Text 데이터에 대한 전처리 부분\n","clean_text = []\n","\n","for s in data['text']:\n","    clean_text.append(preprocess_sentence(s))\n","\n","print(\"Text 전처리 후 결과: \", clean_text[:5])\n","\n","# 전체 headlines 데이터에 대한 전처리 부분\n","clean_headlines = []\n","\n","for s in data['headlines']:\n","    clean_headlines.append(preprocess_sentence(s, False))  # 불용어를 제거하지 않습니다.\n","\n","print(\"headline 전처리 후 결과: \", clean_headlines[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RSapCuvUgVEW","executionInfo":{"status":"ok","timestamp":1696744799332,"user_tz":-540,"elapsed":714543,"user":{"displayName":"­김정현","userId":"07015025296255556159"}},"outputId":"44663dc4-298b-4ca4-f397-498abf67dcf7"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["Text 전처리 후 결과:  ['saurav kant alumnus upgrad iiit pg program machine learning artificial intelligence sr systems engineer infosys almost years work experience program upgrad degree career support helped transition data scientist tech mahindra salary hike upgrad online power learning powered lakh careers', 'kunal shah credit card bill payment platform cred gave users chance win free food swiggy one year pranav kaushik delhi techie bagged reward spending cred coins users get one cred coin per rupee bill paid used avail rewards brands like ixigo bookmyshow ubereats cult fit', 'new zealand defeated india wickets fourth odi hamilton thursday win first match five match odi series india lost international match rohit sharma captaincy consecutive victories dating back march match witnessed india getting seventh lowest total odi cricket history', 'aegon life iterm insurance plan customers enjoy tax benefits premiums paid save taxes plan provides life cover age years also customers options insure critical illnesses disability accidental death benefit rider life cover age years', 'speaking sexual harassment allegations rajkumar hirani sonam kapoor said known hirani many years true metoo movement get derailed metoo movement always believe woman case need reserve judgment added hirani accused assistant worked sanju']\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-8-165776f0a558>:4: MarkupResemblesLocatorWarning: The input looks more like a filename than markup. You may want to open this file and pass the filehandle into Beautiful Soup.\n","  sentence = BeautifulSoup(sentence, \"lxml\").text # <br />, <a href = ...> 등의 html 태그 제거\n"]},{"output_type":"stream","name":"stdout","text":["headline 전처리 후 결과:  ['upgrad learner switches to career in ml al with salary hike', 'delhi techie wins free food from swiggy for one year on cred', 'new zealand end rohit sharma led india match winning streak', 'aegon life iterm insurance plan helps customers save tax', 'have known hirani for yrs what if metoo claims are not true sonam']\n"]}]},{"cell_type":"code","source":["data['text'] = clean_text\n","data['headlines'] = clean_headlines\n","\n","# 빈 값을 Null 값으로 변환\n","data.replace('', np.nan, inplace=True)\n","\n","# Null이 있는지 확인\n","data.isnull().sum()"],"metadata":{"id":"3A25O6rByYez"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Null 샘플 제거\n","data.dropna(axis=0, inplace=True)\n","print('전체 샘플수 :', (len(data)))"],"metadata":{"id":"OQY8CTh0ymZf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 샘플 최대 길이 지정을 위한 분포 확인\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","text_len = [len(s.split()) for s in data['text']]\n","headlines_len = [len(s.split()) for s in data['headlines']]\n","\n","print('텍스트의 최소 길이 : {}'.format(np.min(text_len)))\n","print('텍스트의 최대 길이 : {}'.format(np.max(text_len)))\n","print('텍스트의 평균 길이 : {}'.format(np.mean(text_len)))\n","print('요약의 최소 길이 : {}'.format(np.min(headlines_len)))\n","print('요약의 최대 길이 : {}'.format(np.max(headlines_len)))\n","print('요약의 평균 길이 : {}'.format(np.mean(headlines_len)))\n","\n","plt.subplot(1,2,1)\n","plt.boxplot(text_len)\n","plt.title('Text')\n","plt.subplot(1,2,2)\n","plt.boxplot(headlines_len)\n","plt.title('Summary')\n","plt.tight_layout()\n","plt.show()\n","\n","plt.title('Text')\n","plt.hist(text_len, bins = 40)\n","plt.xlabel('length of samples')\n","plt.ylabel('number of samples')\n","plt.show()\n","\n","plt.title('Summary')\n","plt.hist(headlines_len, bins = 40)\n","plt.xlabel('length of samples')\n","plt.ylabel('number of samples')\n","plt.show()"],"metadata":{"id":"f_zdeHXRytGs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# max_len 지정\n","\n","text_max_len = 50\n","summary_max_len = 8\n","\n","def below_threshold_len(max_len, nested_list):\n","  cnt = 0\n","  for s in nested_list:\n","    if(len(s.split()) <= max_len):\n","        cnt = cnt + 1\n","  print('전체 샘플 중 길이가 %s 이하인 샘플의 비율: %s'%(max_len, (cnt / len(nested_list))))\n","\n","below_threshold_len(text_max_len, data['text'])\n","below_threshold_len(summary_max_len,  data['headlines'])"],"metadata":{"id":"mPkvLfFuzBAy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# max_len보다 긴 샘플 제거 코드\n","\n","data['text_len'] = data['text'].apply(lambda x: len(x.split()))\n","data['headlines_len'] = data['headlines'].apply(lambda x: len(x.split()))\n","\n","# 길이 조건에 맞는 데이터만 필터링\n","filtered_data = data[(data['text_len'] <= text_max_len) & (data['headlines_len'] <= summary_max_len)]\n","\n","# 필요없는 컬럼 제거\n","filtered_data.drop(['text_len', 'headlines_len'], axis=1, inplace=True)\n","\n","print('전체 샘플수 :', (len(data)))"],"metadata":{"id":"pUGVwPpRzLrg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 어텐션 메커니즘이 적용된 Seq2seq"],"metadata":{"id":"ory1TTDV23la"}},{"cell_type":"code","source":["# 헤드라인 데이터에 시작 토큰과 종료 토큰을 추가한다.\n","data['decoder_input'] = data['headlines'].apply(lambda x : 'sostoken '+ x)\n","data['decoder_target'] = data['headlines'].apply(lambda x : x + ' eostoken')\n","data.head()"],"metadata":{"id":"vraULFGp3MUv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 원본 text 인코더와 디코더 레이블을 Numpy로 지정\n","encoder_input = np.array(data['text']) # 인코더의 입력\n","decoder_input = np.array(data['decoder_input']) # 디코더의 입력\n","decoder_target = np.array(data['decoder_target']) # 디코더의 레이블"],"metadata":{"id":"GYDXXkEbzgG1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# encoder 입력의 크기 및 형태와 동일한, 순서가 섞인 정수 시퀀스 생성\n","\n","indices = np.arange(encoder_input.shape[0])\n","np.random.shuffle(indices)\n","print(indices)\n","\n","# 이 시퀀스로 데이터 샘플 순서를 정의하여 잘 섞기\n","\n","encoder_input = encoder_input[indices]\n","decoder_input = decoder_input[indices]\n","decoder_target = decoder_target[indices]"],"metadata":{"id":"fU5fFunaznrT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# headlines와 Seq2seq 요약 결과 비교"],"metadata":{"id":"M_CDU55a23v6"}},{"cell_type":"code","source":[],"metadata":{"id":"TSp_bGwS3U3I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Summa 이용한 추출적 요약"],"metadata":{"id":"Di8uhpDK234E"}},{"cell_type":"code","source":[],"metadata":{"id":"qEwKgth73e17"},"execution_count":null,"outputs":[]}]}